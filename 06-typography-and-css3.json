{
  "quizzes":
  [
    {
      "quizname": "week six: typography and css3",
      "questions":
      [
        {
          "question_text": "the css property responsible for setting an element’s typeface is...",
          "question_type": "multiple_choice",
          "answers":
          [
            { "answer_text": "<code>font-face</code>" },
            { "answer_text": "<code>font-family</code>" },
            { "answer_text": "<code>type-face</code>" },
            { "answer_text": "<code>font</code>" }
          ],
          "correct_answer": "1",
          "explanation": "<code>font-face</code> and <code>type-face</code> don’t exist. For those who chose the <code>font</code> property, that property exists and does more than just select the typeface. See page 273 in <em>HTML & CSS</em> for details."
        },
        {
          "question_text": "a common unit of measure for type on the web is not...",
          "question_type": "multiple_choice",
          "answers":
          [
            { "answer_text": "pixels" },
            { "answer_text": "percentages" },
            { "answer_text": "ems" },
            { "answer_text": "picas" }
          ],
          "correct_answer": "3",
          "explanation": "Picas <em>can</em> be used in CSS, but they're primarily used in the context of print. See page 274 in <em>HTML & CSS</em> for details. (Did you know you can use CSS to specially format a webpage for print? Many websites include a separate stylesheet with rules to format a page for a printer. It might, for example, hide advertisements or navigational elements. <a href='https://www.w3schools.com/cssref/css3_pr_mediaquery.asp' target='_blank'>Learn more about the @media rule.</a>)"
        },
        {
          "question_text": "kerning is to <code>letter-spacing</code> as leading is to _______.",
          "question_type": "multiple_choice",
          "answers":
          [
            { "answer_text": "<code>leading</code>" },
            { "answer_text": "<code>line-height</code>" },
            { "answer_text": "<code>space-after</code>" },
            { "answer_text": "<code>line-spacing</code>" }
          ],
          "correct_answer": "1",
          "explanation": "There is only one valid CSS property among the mix, <code>line-height</code>. Yes, it’s weird there’s no property named <code>leading</code>, but that’s the way the CSS cookie crumbles. Also note that there’s no concept of “space after” a paragraph; this is accomplished by setting <code>margin-bottom</code> to paragraph elements. See page 283 in <em>HTML & CSS</em> for details."
        },
        {
          "question_text": "true or false: <code>:first-line</code> is an example of a pseudo-class.",
          "question_type": "boolean",
          "answers":
          [
            { "answer_text": "true" },
            { "answer_text": "false" }
          ],
          "correct_answer": "1",
          "explanation": "It’s an example of a <strong>pseudo-element</strong>. A pseudo-element acts like an extra element is in the code. A pseudo-class, on the other hand, selects elements that are in a specific state. Unfortunately, both are written with a single preceding colon, even though they are different. In newer versions of the CSS specification, pseudo-elements are written with <em>two</em> preceding colons, as in <code>::first-line</code>. (<a href='https://css-tricks.com/to-double-colon-or-not-do-double-colon/' target='_blank'>Here’s a good summary of the one- vs. two-colon situation.</a>) <a href='https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors/Pseudo-classes_and_pseudo-elements' target='_blank'>View the differences between pseudo-elements and pseudo-classes here</a>. See also page 289 in <em>HTML & CSS</em>.<br><br>My favorite pseudo-elements are <code>::before</code> and <code>::after</code>, especially when combined with <a href='https://css-tricks.com/css-content/' target='_blank'>the content property</a>."
        },
        {
          "question_text": "how many hyperlink states can be styled?",
          "question_type": "multiple_choice",
          "answers":
          [
            { "answer_text": "2" },
            { "answer_text": "3" },
            { "answer_text": "4" },
            { "answer_text": "5" }
          ],
          "correct_answer": "3",
          "explanation": "Dude, you can style up to <em>five</em> states: <code>:link</code> (an unvisited link), <code>:visited</code> (a visited link), <code>:hover</code> (mousing over), <code>:active</code> (mouse clicking), and <code>:focus</code> (keyboard focus, accomplished by tabbing to the element). See pages 290–291 in <em>HTML & CSS</em> for details."
        },        
        {
          "question_text": "the following css properties can have transitions except...",
          "question_type": "multiple_choice",
          "answers":
          [
            { "answer_text": "opacity" },
            { "answer_text": "font-size" },
            { "answer_text": "color" },
            { "answer_text": "display" }
          ],
          "correct_answer": "3",
          "explanation": "Virtually all properties whose values are numeric can be animated (a handy time to remember that colors can be represented numerically). The values for the <code>display</code> property are not numeric, therefore it cannot be transitioned."
        },
        {
          "question_text": "according to dan cederholm, animation on the web should be used...",
          "question_type": "multiple_choice",
          "answers":
          [
            { "answer_text": "appropriately" },
            { "answer_text": "annoyingly" },
            { "answer_text": "abundantly" },
            { "answer_text": "sparingly" }
          ],
          "correct_answer": "0",
          "explanation": "“Like all shiny new tools, it’s important to use transitions <em>appropriately</em>. One can easily go overboard adding transitions to everything on the page, resulting in some sort of annoying, pulsating monster. It’s key to decide where transitions rightfully enrich the user experience and when they are just extraneous noise.” –Dan Cederholm, <em>CSS3 for Web Designers</em>, page 26"
        },
        {
          "question_text": "the css snippet below... <blockquote><code>p { <br>color: brown;<br> transition: color .3s ease ; <br>}</code></blockquote> ...will do what when someone hovers over a hypothetical paragraph element?",
          "question_type": "multiple_choice",
          "answers":
          [
            { "answer_text": "turn the text brown over the course of 3 seconds" },
            { "answer_text": "turn the text brown over the course of 300 milliseconds" },
            { "answer_text": "nothing" },
            { "answer_text": "we don’t know what it will do" }
          ],
          "correct_answer": "2",
          "explanation": "In order for something to happen, we would need to define a second rule for the hover state: <code>p:hover { ... }</code>. We would have to add a declaration with the <code>color</code> property to change the color, which it would do over the course of 300 milliseconds per the first rule. <br><br>Note that transitions are assigned to the <strong>mouse-off state</strong> rule, not the hover state rule. This is important so that a property may transition to <em>and</em> from a given value."
        },
        {
          "question_text": "all of the following capabilities were introduced in CSS3 except...",
          "question_type": "multiple_choice",
          "answers":
          [
            { "answer_text": "animation (through the <code>transition</code> property and <code>@keyframe</code> rules)" },
            { "answer_text": "media queries (for responsive design)" },
            { "answer_text": "multiple background images" },
            { "answer_text": "a new layout engine (CSS grid)" },
            { "answer_text": "nifty new selectors" },
            { "answer_text": "more sophisticated typographic effects" },
            { "answer_text": "time travel" }
          ],
          "correct_answer": "6",
          "explanation": "CSS3 was crammed with so much goodness that the makers decided to wait until CSS4 to include the ability to travel through time (DeLorean style, of course).<br><img src='img/delorean.jpg' alt='DeLorean' title='DeLorean' width='100%'>"
        },
        {
          "question_text": "according to laura kalbag, “_________ is the secret weapon of web accessibility.”",
          "question_type": "multiple_choice",
          "answers":
          [
            { "answer_text": "well-structured html" },
            { "answer_text": "usability" },
            { "answer_text": "navigability" },
            { "answer_text": "empathy" }
          ],
          "correct_answer": "0",
          "explanation": "According to Kalbag, it's “well-structured html.” See page 90 in <em>Accessibility for Everyone</em>. The other items are pretty important to accessibility, too, but that's not what Laura Kalbag wrote in her book."
        }
      ]
    }
  ]
}